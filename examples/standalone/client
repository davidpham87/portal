#!/usr/bin/env bb

(require '[cheshire.core :as json])
(require '[clojure.main :as main])
(require '[cognitect.transit :as transit])
(require '[org.httpkit.client :as http])
(import '(java.io ByteArrayOutputStream))

(defn- transit-write [value]
  (let [out (ByteArrayOutputStream. 1024)]
    (transit/write
     (transit/writer out :json {:transform transit/write-meta})
     value)
    (.toString out)))

(defn send!
  ([value] (send! nil value))
  ([{:keys [encoding port host]
     :or   {encoding :transit
            host     "localhost"
            port     53755}}
    value]
   @(http/post
     (str "http://" host ":" port "/submit")
     {:headers
      {"content-type"
       (case encoding
         :json    "application/json"
         :transit "application/transit+json"
         :edn     "application/edn")}
      :body
      (case encoding
        :json    (json/generate-string value)
        :transit (transit-write value)
        :edn     (pr-str value))})))

(add-tap send!)
(comment
  (add-tap (partial send! {:encoding :json}))
  (add-tap (partial send! {:encoding :edn})))

(main/repl)
